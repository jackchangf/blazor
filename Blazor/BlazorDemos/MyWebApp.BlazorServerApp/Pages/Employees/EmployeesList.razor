@page "/Employees/List"

@using MyWebApp.BlazorServerApp.ViewModels;
@using System.Text.Json;

<h1>List of Employees</h1>

@if (this.employees == null)
{
    <p>Loading data.... please wait...</p>
}
else
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>ID</th>
                <th>Employee Name</th>
                <th>Date of Birth</th>
                <th>Salary</th>
                <th>IsEnabled</th>
                <th>
                    <a class="btn-primary btn-sm"
                       href="/Employees/Manage?pMode=@MyApplicationEditModes.Add">
                        Add
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in employees)
            {
                <tr>
                    <td>@item.EmployeeID</td>
                    <td>@item.EmployeeName</td>
                    <td>@item.DateOfBirth.ToString("dd-MMM-yyyy")</td>
                    <td>@item.Salary.ToString("C")</td>
                    <td>@item.IsEnabled</td>
                    <td>
                        <a class="btn btn-primary btn-sm"
                           href="/Employees/Manage?pID=@item.EmployeeID&pMode=@MyApplicationEditModes.Edit">
                            Edit
                        </a>
                        <a class="btn btn-primary btn-sm"
                           href="/Employees/Manage?pID=@item.EmployeeID&pMode=@MyApplicationEditModes.Delete">
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {

    private HttpClient httpClient = new HttpClient();
    private IEnumerable<EmployeeViewModel> employees;

    protected override async Task OnInitializedAsync()
    {
        string apiUri = "https://localhost:44325/api/Employees";

        employees = await JsonSerializer.DeserializeAsync<IEnumerable<EmployeeViewModel>>(
            await httpClient.GetStreamAsync(apiUri),
            new JsonSerializerOptions()
            {
                PropertyNameCaseInsensitive = true
            });


        await base.OnInitializedAsync();
    }
}
